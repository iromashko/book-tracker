{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/add-book/add-book.component.html","webpack:///./src/app/add-book/add-book.component.ts","webpack:///./src/app/add-reader/add-reader.component.html","webpack:///./src/app/add-reader/add-reader.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/core/core.module.ts","webpack:///./src/app/core/data.service.ts","webpack:///./src/app/core/logger.service.ts","webpack:///./src/app/core/module-import-guard.ts","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/data.ts","webpack:///./src/app/edit-book/edit-book.component.html","webpack:///./src/app/edit-book/edit-book.component.ts","webpack:///./src/app/edit-reader/edit-reader.component.html","webpack:///./src/app/edit-reader/edit-reader.component.ts","webpack:///./src/app/models/bookTrackerError.ts","webpack:///./src/app/services/badge.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"col-lg-5\\\">\\r\\n  <div class=\\\"well bs-component\\\">\\r\\n    <form #addBookForm=\\\"ngForm\\\" (ngSubmit)=\\\"saveBook(addBookForm.value)\\\" class=\\\"form-horizontal\\\">\\r\\n      <fieldset>\\r\\n        <legend>Add New Book</legend>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputTitle\\\" class=\\\"col-lg-3 control-label\\\">Title</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputTitle\\\" placeholder=\\\"Title\\\" name=\\\"title\\\" ngModel>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputAuthor\\\" class=\\\"col-lg-3 control-label\\\">Author</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputAuthor\\\" placeholder=\\\"Author\\\" name=\\\"author\\\" ngModel>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputYear\\\" class=\\\"col-lg-3 control-label\\\">Year</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputYear\\\" placeholder=\\\"Year Published\\\" name=\\\"publicationYear\\\" ngModel>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"col-lg-8 col-lg-offset-3\\\">\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Save</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </fieldset>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { Book } from \"app/models/book\";\r\n\r\n@Component({\r\n  selector: 'app-add-book',\r\n  templateUrl: './add-book.component.html',\r\n  styles: []\r\n})\r\nexport class AddBookComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() { }\r\n\r\n  saveBook(formValues: any): void {\r\n    let newBook: Book = <Book>formValues;\r\n    newBook.bookID = 0;\r\n    console.log(newBook);\r\n    console.warn('Save new book not yet implemented.');\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"col-lg-5\\\">\\r\\n  <div class=\\\"well bs-component\\\">\\r\\n    <form #addReaderForm=\\\"ngForm\\\" (ngSubmit)=\\\"saveReader(addReaderForm.value)\\\" class=\\\"form-horizontal\\\">\\r\\n      <fieldset>\\r\\n        <legend>Add Reader</legend>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputGoal\\\" class=\\\"col-lg-3 control-label\\\">Name</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputGoal\\\" placeholder=\\\"Name\\\" name=\\\"name\\\" ngModel>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputGoal\\\" class=\\\"col-lg-3 control-label\\\">Weekly Goal</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputGoal\\\" placeholder=\\\"Weekly Goal\\\" name=\\\"weeklyReadingGoal\\\" ngModel>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputTotal\\\" class=\\\"col-lg-3 control-label\\\">Total Read</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputTotal\\\" placeholder=\\\"Total Minutes Read\\\" name=\\\"totalMinutesRead\\\" ngModel>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"col-lg-10 col-lg-offset-3\\\">\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Save</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </fieldset>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { Reader } from \"app/models/reader\";\r\n\r\n@Component({\r\n  selector: 'app-add-reader',\r\n  templateUrl: './add-reader.component.html',\r\n  styles: []\r\n})\r\nexport class AddReaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() { }\r\n\r\n  saveReader(formValues: any): void {\r\n    let newReader: Reader = <Reader>formValues;\r\n    newReader.readerID = 0;\r\n    console.log(newReader);\r\n    console.warn('Save new reader not yet implemented.');\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { AddBookComponent } from \"app/add-book/add-book.component\";\r\nimport { AddReaderComponent } from \"app/add-reader/add-reader.component\";\r\nimport { DashboardComponent } from \"app/dashboard/dashboard.component\";\r\nimport { EditBookComponent } from \"app/edit-book/edit-book.component\";\r\nimport { EditReaderComponent } from \"app/edit-reader/edit-reader.component\";\r\n\r\nconst routes: Routes = [\r\n  { path: 'dashboard', component: DashboardComponent },\r\n  { path: 'addbook', component: AddBookComponent },\r\n  { path: 'addreader', component: AddReaderComponent },\r\n  { path: 'editreader/:id', component: EditReaderComponent },\r\n  { path: 'editbook/:id', component: EditBookComponent },\r\n  { path: '', redirectTo: 'dashboard', pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-default\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <!-- Brand and toggle get grouped for better mobile display -->\\r\\n        <div class=\\\"navbar-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\">\\r\\n                <span class=\\\"sr-only\\\">Toggle navigation</span>\\r\\n                <span class=\\\"icon-bar\\\"></span>\\r\\n                <span class=\\\"icon-bar\\\"></span>\\r\\n                <span class=\\\"icon-bar\\\"></span>\\r\\n            </button>\\r\\n            <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/dashboard']\\\">Book Tracker</a>\\r\\n        </div>\\r\\n\\r\\n        <!-- Collect the nav links, forms, and other content for toggling -->\\r\\n        <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\">\\r\\n            <ul class=\\\"nav navbar-nav\\\">\\r\\n                <li><a [routerLink]=\\\"['/addbook']\\\">Add Book<span class=\\\"sr-only\\\">(current)</span></a></li>\\r\\n                <li><a [routerLink]=\\\"['/addreader']\\\">Add Reader</a></li>\\r\\n            </ul>\\r\\n        </div><!-- /.navbar-collapse -->\\r\\n    </div><!-- /.container-fluid -->\\r\\n</nav>\\r\\n\\r\\n<router-outlet></router-outlet>\\r\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from \"@angular/platform-browser\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { FormsModule } from \"@angular/forms\";\r\n\r\nimport { AddBookComponent } from \"./add-book/add-book.component\";\r\nimport { AddReaderComponent } from \"./add-reader/add-reader.component\";\r\nimport { AppComponent } from \"./app.component\";\r\nimport { AppRoutingModule } from \"./app-routing.module\";\r\nimport { DashboardComponent } from \"./dashboard/dashboard.component\";\r\nimport { EditBookComponent } from \"./edit-book/edit-book.component\";\r\nimport { EditReaderComponent } from \"./edit-reader/edit-reader.component\";\r\nimport { CoreModule } from \"./core/core.module\";\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    DashboardComponent,\r\n    AddBookComponent,\r\n    EditReaderComponent,\r\n    EditBookComponent,\r\n    AddReaderComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    CoreModule,\r\n    HttpClientModule,\r\n  ],\r\n  providers: [\r\n    // {\r\n    //   provide: LoggerService,\r\n    //   useValue: {\r\n    //     log: (message) => console.log(`MESSAGE: ${message}`),\r\n    //     error: (message) => console.error(`PROBLEM: ${message}`),\r\n    //   },\r\n    // },\r\n    // {\r\n    //   provide: DataService,\r\n    //   useFactory: dataServiceFactory,\r\n    //   deps: [LoggerService],\r\n    // },\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { NgModule, Optional, SkipSelf } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { LoggerService } from \"./logger.service\";\nimport { DataService } from \"./data.service\";\nimport { throwIfAlreadyLoaded } from \"./module-import-guard\";\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [],\n  exports: [],\n  providers: [LoggerService, DataService],\n})\nexport class CoreModule {\n  constructor(@Optional() @SkipSelf() parentModule: CoreModule) {\n    throwIfAlreadyLoaded(parentModule, \"CoreModule\");\n  }\n}\n","import { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { allBooks, allReaders } from \"app/data\";\nimport { Book } from \"app/models/book\";\nimport { BookTrackerError } from \"app/models/bookTrackerError\";\nimport { Reader } from \"app/models/reader\";\nimport { throwError } from \"rxjs\";\nimport { Observable } from \"rxjs\";\nimport { catchError } from \"rxjs/operators\";\nimport { LoggerService } from \"./logger.service\";\n\n@Injectable()\nexport class DataService {\n  public mostPopularBook: Book = allBooks[0];\n\n  constructor(\n    private loggerService: LoggerService,\n    private http?: HttpClient\n  ) {}\n\n  getAllReaders(): Observable<Reader[] | BookTrackerError> {\n    return this.http\n      .get<Reader[]>(\"/api/readers\")\n      .pipe(catchError(this.handleError));\n  }\n\n  private handleError(error: HttpErrorResponse): Observable<BookTrackerError> {\n    let dataError = new BookTrackerError();\n    dataError.errorNumber = 100;\n    dataError.message = error.statusText;\n    dataError.friendlyMessage = \"An error occured retrieving data.\";\n    return throwError(dataError);\n  }\n\n  getReaderById(id: number): Reader {\n    return allReaders.find((reader) => reader.readerID === id);\n  }\n\n  getAllBooks(): Book[] {\n    return allBooks;\n  }\n\n  getBookById(id: number): Book {\n    return allBooks.find((book) => book.bookID === id);\n  }\n\n  setMostPopularBook(popularBook: Book): void {\n    this.mostPopularBook = popularBook;\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\n@Injectable()\nexport class LoggerService {\n  log(message: string): void {\n    const timeString: String = new Date().toLocaleTimeString();\n    console.log(`${message} (${timeString})`);\n  }\n\n  error(message: string): void {\n    console.error(`ERROR: ${message}`);\n  }\n}\n","export function throwIfAlreadyLoaded(parentModule: any, moduleName: string) {\n  if (parentModule) {\n    throw new Error(\n      `${moduleName} has already been loaded. Import Core modules in the AppModule only.`\n    );\n  }\n}\n","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-4\\\">\\r\\n      <div class=\\\"panel panel-primary\\\">\\r\\n        <div class=\\\"panel-heading\\\">\\r\\n          <h3 class=\\\"panel-title\\\">All Books</h3>\\r\\n        </div>\\r\\n        <div class=\\\"panel-body\\\">\\r\\n        <li *ngFor='let book of allBooks'>\\r\\n          <i>{{book.title}}</i>\\r\\n          <a [routerLink]=\\\"['/editbook', book.bookID]\\\"> Edit </a>\\r\\n          <a (click)=\\\"deleteBook(book.bookID)\\\">Delete</a>\\r\\n        </li>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-4\\\">\\r\\n      <div class=\\\"panel panel-primary\\\">\\r\\n        <div class=\\\"panel-heading\\\">\\r\\n          <h3 class=\\\"panel-title\\\">All Readers</h3>\\r\\n        </div>\\r\\n        <div class=\\\"panel-body\\\">\\r\\n        <li *ngFor='let reader of allReaders'>\\r\\n          {{reader.name}}\\r\\n          <a [routerLink]=\\\"['/editreader', reader.readerID]\\\">Edit</a>\\r\\n          <a (click)=\\\"deleteReader(reader.readerID)\\\"> Delete </a>\\r\\n        </li>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-4\\\">\\r\\n      <div class=\\\"panel panel-primary\\\">\\r\\n        <div class=\\\"panel-heading\\\">\\r\\n          <h3 class=\\\"panel-title\\\">Most Popular Book</h3>\\r\\n        </div>\\r\\n        <div class=\\\"panel-body\\\">\\r\\n          <i>{{mostPopularBook.title}}</i> by {{mostPopularBook.author}}\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { DataService } from \"app/core/data.service\";\r\nimport { LoggerService } from \"app/core/logger.service\";\r\n\r\nimport { Book } from \"app/models/book\";\r\nimport { BookTrackerError } from \"app/models/bookTrackerError\";\r\nimport { Reader } from \"app/models/reader\";\r\nimport { Observable } from \"rxjs\";\r\n\r\n@Component({\r\n  selector: \"app-dashboard\",\r\n  templateUrl: \"./dashboard.component.html\",\r\n  styles: [],\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  allBooks: Book[];\r\n  allReaders: Reader[];\r\n  mostPopularBook: Book;\r\n\r\n  constructor(\r\n    private loggerService: LoggerService,\r\n    private dataService: DataService\r\n  ) {\r\n    this.loggerService.log(\"Creating the dashboard!\");\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.allBooks = this.dataService.getAllBooks();\r\n    this.dataService.getAllReaders().subscribe(\r\n      (data: Reader[]) => (this.allReaders = data),\r\n      (err: BookTrackerError) => console.log(err.friendlyMessage),\r\n      () => this.loggerService.log(\"All done getting readers!\")\r\n    );\r\n    this.mostPopularBook = this.dataService.mostPopularBook;\r\n\r\n    this.loggerService.log(\"Done with dashboard initialization\");\r\n  }\r\n\r\n  deleteBook(bookID: number): void {\r\n    console.warn(`Delete book not yet implemented (bookID: ${bookID}).`);\r\n  }\r\n\r\n  deleteReader(readerID: number): void {\r\n    console.warn(`Delete reader not yet implemented (readerID: ${readerID}).`);\r\n  }\r\n}\r\n","import { Book } from \"app/models/book\";\r\nimport { Reader } from \"app/models/reader\";\r\n\r\nexport const allReaders: Reader[] = [\r\n    { readerID: 1, name: 'Marie', weeklyReadingGoal: 400, totalMinutesRead: 5600 },\r\n    { readerID: 2, name: 'Daniel', weeklyReadingGoal: 210, totalMinutesRead: 3000 },\r\n    { readerID: 3, name: 'Lanier', weeklyReadingGoal: 140, totalMinutesRead: 600 }\r\n  ];\r\n\r\nexport const allBooks: Book[] = [\r\n    { bookID: 1, title: 'Goodnight Moon', author: 'Margaret Wise Brown', publicationYear: 1953 },\r\n    { bookID: 2, title: 'Green Eggs and Ham', author: 'Dr. Seuss', publicationYear: 1960 },\r\n    { bookID: 3, title: 'Where the Wild Things Are', author: 'Maurice Sendak', publicationYear: 1963 },\r\n    { bookID: 4, title: 'The Hobbit', author: 'J. R. R. Tolkien', publicationYear: 1937 },\r\n    { bookID: 5, title: 'Curious George', author: 'H. A. Rey', publicationYear: 1941 },\r\n    { bookID: 6, title: 'Alice\\'s Adventures in Wonderland', author: 'Lewis Carroll', publicationYear: 1865 },\r\n];\r\n","module.exports = \"<div class=\\\"col-lg-5\\\">\\r\\n  <div class=\\\"well bs-component\\\">\\r\\n    <form class=\\\"form-horizontal\\\">\\r\\n      <fieldset>\\r\\n        <legend>Edit Book</legend>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputTitle\\\" class=\\\"col-lg-3 control-label\\\">Title</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputTitle\\\" placeholder=\\\"Title\\\" [(ngModel)]=\\\"selectedBook.title\\\" name=\\\"title\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputAuthor\\\" class=\\\"col-lg-3 control-label\\\">Author</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputAuthor\\\" placeholder=\\\"Author\\\" [(ngModel)]=\\\"selectedBook.author\\\" name=\\\"author\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputYear\\\" class=\\\"col-lg-3 control-label\\\">Year</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputYear\\\" placeholder=\\\"Year Published\\\" [(ngModel)]=\\\"selectedBook.publicationYear\\\" name=\\\"publicationYear\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"col-lg-8 col-lg-offset-3\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveChanges()\\\">Save</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"setMostPopular()\\\">Set As Most Popular</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </fieldset>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { DataService } from 'app/core/data.service';\r\nimport { LoggerService } from 'app/core/logger.service';\r\n\r\nimport { Book } from \"app/models/book\";\r\n\r\n@Component({\r\n  selector: \"app-edit-book\",\r\n  templateUrl: \"./edit-book.component.html\",\r\n  styles: [],\r\n  providers: []\r\n})\r\nexport class EditBookComponent implements OnInit {\r\n  selectedBook: Book;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private dataService: DataService,\r\n    private loggerService: LoggerService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    let bookID: number = parseInt(this.route.snapshot.params[\"id\"]);\r\n    this.selectedBook = this.dataService.getBookById(bookID);\r\n  }\r\n\r\n  setMostPopular(): void {\r\n    this.dataService.setMostPopularBook(this.selectedBook);\r\n    this.loggerService.log(`New most popular book: ${this.selectedBook.title}`);\r\n  }\r\n\r\n  saveChanges(): void {\r\n    console.warn(\"Save changes to book not yet implemented.\");\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"col-lg-5\\\">\\r\\n  <div class=\\\"well bs-component\\\">\\r\\n    <form class=\\\"form-horizontal\\\">\\r\\n      <fieldset>\\r\\n        <legend>Edit Reader</legend>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputGoal\\\" class=\\\"col-lg-3 control-label\\\">Name</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"inputGoal\\\"\\r\\n              placeholder=\\\"Name\\\"\\r\\n              [(ngModel)]=\\\"selectedReader.name\\\"\\r\\n              name=\\\"name\\\"\\r\\n            />\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputGoal\\\" class=\\\"col-lg-3 control-label\\\"\\r\\n            >Weekly Goal</label\\r\\n          >\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"inputGoal\\\"\\r\\n              placeholder=\\\"Weekly Goal\\\"\\r\\n              [(ngModel)]=\\\"selectedReader.weeklyReadingGoal\\\"\\r\\n              name=\\\"weeklyReaddingGoal\\\"\\r\\n            />\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputTotal\\\" class=\\\"col-lg-3 control-label\\\"\\r\\n            >Total Read</label\\r\\n          >\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"inputTotal\\\"\\r\\n              placeholder=\\\"Total Minutes Read\\\"\\r\\n              [(ngModel)]=\\\"selectedReader.totalMinutesRead\\\"\\r\\n              name=\\\"totalMinutesRead\\\"\\r\\n            />\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"col-lg-3 control-label\\\">Current Badge</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            {{ currentBadge }}\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"col-lg-10 col-lg-offset-3\\\">\\r\\n            <button\\r\\n              type=\\\"button\\\"\\r\\n              class=\\\"btn btn-primary\\\"\\r\\n              (click)=\\\"saveChanges()\\\"\\r\\n            >\\r\\n              Save\\r\\n            </button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </fieldset>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { DataService } from 'app/core/data.service';\r\n\r\nimport { Reader } from \"app/models/reader\";\r\nimport { BadgeService } from \"app/services/badge.service\";\r\n\r\n@Component({\r\n  selector: \"app-edit-reader\",\r\n  templateUrl: \"./edit-reader.component.html\",\r\n  styles: [],\r\n  providers: [BadgeService],\r\n})\r\nexport class EditReaderComponent implements OnInit {\r\n  selectedReader: Reader;\r\n  currentBadge: string;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private dataService: DataService,\r\n    private badgeService: BadgeService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    let readerID: number = parseInt(this.route.snapshot.params[\"id\"]);\r\n    this.selectedReader = this.dataService.getReaderById(readerID);\r\n    this.currentBadge = this.badgeService.getReaderBadge(\r\n      this.selectedReader.totalMinutesRead\r\n    );\r\n  }\r\n\r\n  saveChanges() {\r\n    console.warn(\"Save reader not yet implemented.\");\r\n  }\r\n}\r\n","import { ECANCELED } from \"constants\";\n\nexport class BookTrackerError {\n  errorNumber: number;\n  message: string;\n  friendlyMessage: string;\n}\n","import { Injectable } from \"@angular/core\";\n\n@Injectable()\nexport class BadgeService {\n  constructor() {}\n\n  getReaderBadge(minutesRead: number): string {\n    if (minutesRead > 5000) {\n      return \"Book Worm\";\n    } else if (minutesRead > 2500) {\n      return \"Page Turner\";\n    } else {\n      return \"Getting Started\";\n    }\n  }\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n"],"sourceRoot":""}